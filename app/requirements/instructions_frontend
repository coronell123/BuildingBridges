# project Overview
Building Bridges Website is a modern, responsive platform designed to empower FLINTA individuals and girls of color aged 16–18. This project is built with Next.js, styled with TailwindCSS, and deployed using Vercel. It provides tools, resources, and a supportive community to encourage participation, achievement, and resilience among underrepresented groups in psychosocial and educational fields.

Projektanforderungen für die Building Bridges Website
(Ergänzung zu den bestehenden Entwickler-Instruktionen)
	•	Zielgruppe: FLINTA-Personen und BIPoC-Mädchen (16–18 Jahre), die psychosoziale und pädagogische Unterstützung suchen.
	•	Technischer Stack:
	•	Next.js (React-Framework)
	•	TailwindCSS (Layout und Styling)
	•	React Context API (State Management)
	•	Zod (Validierung)
	•	Lucide-React, Tailwind ARIA Components (Icons und UI-Komponenten)
	•	PNPM (Paketverwaltung)
	•	Vercel (Deployment, CI/CD)


1. Navigation Bar (Navbar)
	•	Logo: Transparenter Hintergrund, responsiv skalieren.
	•	Link-Struktur:
	•	Entfernen: „Pricing“
	•	Hinzufügen: „Home“, „Vision“, „Workshops“, „Activity“, „Roadmap“
	•	„Sign In“ und „Sign Up“ erhalten
	•	Responsives Verhalten (Hamburger-Menü, Dropdown bei kleinen Screens)


2. Hero Section
	•	Hintergrundbild wahlweise austauschen.
	•	Call-to-Action-Buttons: „Jetzt Anmelden“ → zu Sign Up/Sign In.
	•	Volle Responsivität (Skalierung für mobile Endgeräte).
4. Vision Page
	•	Interaktiver Seitenaufbau (Klickbare Sektionen, Animationen).
	•	Inhalte zum Zweck und zur Markenvision von Building Bridges.

5. Workshops Page
	•	Dynamisches Grid mit Platzhaltern für Workshops.
	•	Klick auf Workshop → Modal mit Titel, Beschreibung, Datum, Ort, Registrierungs-Button.
	•	Responsives Grid-Layout.

6. Activity Page
	•	Zeitachse (Timeline) des Projektfortschritts.
	•	Visuelle, interaktive Darstellung aller Phasen.

7. Roadmap Page
	•	Aktuelle und geplante Meilensteine.
	•	Statusmarkierungen („Completed“, „In Progress“, „Planned“).
	•	Klickbare Roadmap-Elemente für Detailinformationen.

8. Onboarding Process (Sign-Up)
	•	Mehrstufiger Flow mit Eingabe zu Herausforderungen (Diskriminierung, Rassismus, etc.) und Zielen.
	•	„Baum“-Interaktion: Nutzer:innen erstellen Schritt für Schritt ihr eigenes Profil, erhalten personalisierte Workshop- oder Ressourcenempfehlungen.
	•	Datenbank-Speicherung → Webhook zur Hyper-Personalisierung.

9. Mobile Responsiveness
	•	Hamburger-Menü und Dropdown für mobile Devices.
	•	Dynamische Skalierung von Logos, Buttons und Content.
	•	Alle Seiten (Navbar, Hero, Footer, Vision etc.) auf kleine Screens optimieren.

10. Backend Integration
	•	Datenpersistenz der Onboarding-Infos.
	•	Webhooks für automatisierte Workflows und personalisierte Empfehlungen.

11. Barrierefreiheit (Accessibility)
	•	ARIA-Rollen, ausreichender Kontrast, gut lesbare Schriften.
	•	Fokus-Zustände und Tastatur-Navigation berücksichtigen.



Dateistruktur (Auszug)
	•	app/: Next.js 13 Routing (u. a. (dashboard), (login) usw.)
	•	components/: Gemeinsame UI-, Layout- und Shared-Komponenten
	•	lib/: Auth-Funktionen, Datenbankzugriff (Drizzle), Utility-Funktionen
	•	api/: Serverseitige Endpoints, z. B. Stripe Integration
	•	styles/: Globale CSS-Dateien (Tailwind-Konfiguration)
	•	public/: Statische Dateien (Logos, Favicon)

# current file structure
.
├── .next
├── .vercel
├── app
│   ├── (dashboard)
│   │   ├── dashboard
│   │   │   ├── activity
│   │   │   │   └── page.tsx
│   │   │   ├── general
│   │   │   │   └── page.tsx
│   │   │   ├── security
│   │   │   │   └── page.tsx
│   │   │   ├── invite-team.tsx
│   │   │   ├── layout.tsx
│   │   │   ├── page.tsx
│   │   │   └── settings.tsx
│   │   ├── pricing
│   │   │   ├── layout.tsx
│   │   │   └── page.tsx
│   │   └── terminal.tsx
│   ├── (login)
│   │   ├── sign-in
│   │   │   └── page.tsx
│   │   ├── sign-up
│   │   │   └── page.tsx
│   │   ├── actions.ts
│   │   └── login.tsx
│   ├── globals.css
│   ├── layout.tsx
│   ├── not-found.tsx
│   └── page.tsx
├── api
│   ├── stripe
│   │   ├── checkout
│   │   │   └── route.ts
│   │   └── webhook
│   │       └── route.ts
├── lib
│   ├── auth
│   │   └── session.ts
│   ├── db
│   │   ├── migrations
│   │   │   ├── 0000_soft_the_anarchist.sql
│   │   │   └── meta
│   │   │       ├── 0000_snapshot.json
│   │   │       └── _journal.json
│   │   ├── drizzle.ts
│   │   ├── migrate.ts
│   │   ├── schema.ts
│   │   ├── seed.ts
│   │   └── setup.ts
│   ├── payments
│   │   └── stripe.ts
│   └── utils.ts
├── components
│   ├── ui
│   │   ├── avatar.tsx
│   │   ├── button.tsx
│   │   ├── card.tsx
│   │   ├── dropdown-menu.tsx
│   │   ├── input.tsx
│   │   ├── label.tsx
│   │   └── radio-group.tsx
│   ├── layout
│   │   ├── footer.tsx
│   │   ├── header.tsx
│   │   └── navbar.tsx
│   └── shared
│       └── loading.tsx
├── public
│   ├── favicon.ico
│   ├── logo.png
│   └── logo_graphic_wide2.png
├── styles
│   └── globals.css
├── .env
├── .env.example
├── .gitignore
├── components.json
├── drizzle.config.ts
├── LICENSE
├── middleware.ts
├── next-env.d.ts
├── next.config.js
├── package.json
├── pnpm-lock.yaml
├── postcss.config.mjs
├── README.md
├── tailwind.config.ts
└── tsconfig.json